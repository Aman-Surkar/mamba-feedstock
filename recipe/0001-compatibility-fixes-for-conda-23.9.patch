From 42b844376b0607df0f87ff744ab0fe492a19e927 Mon Sep 17 00:00:00 2001
From: Aman-Surkar <aman_surkar@persistent.com>
Date: Tue, 3 Oct 2023 08:44:44 +0000
Subject: [PATCH] compatibility fixes for conda 23.9

---
 mamba/mamba/mamba.py | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/mamba/mamba/mamba.py b/mamba/mamba/mamba.py
index c1bb4966..c8832d15 100644
--- a/mamba/mamba/mamba.py
+++ b/mamba/mamba/mamba.py
@@ -16,7 +16,6 @@ from conda.base.context import context
 from conda.cli.common import (
     check_non_admin,
     confirm_yn,
-    ensure_name_or_prefix,
     specs_from_url,
 )
 from conda.cli.install import check_prefix, clone, get_revision
@@ -266,8 +265,9 @@ def install(args, parser, command="install"):
         solver_task = api.SOLVER_UPDATE
         solver_options.clear()
 
-    if newenv:
-        ensure_name_or_prefix(args, command)
+    if newenv and not (args.name or args.prefix):
+        raise CondaValueError('either -n NAME or -p PREFIX option required,\n'
+                              'try "mamba %s -h" for more details' % command)
     prefix = context.target_prefix
     if newenv:
         check_prefix(prefix, json=context.json)
@@ -798,10 +798,15 @@ Examples:
 
     import argparse
     from argparse import SUPPRESS
+    try:
+        p = sub_parsers.add_parser(
+            "repoquery", description=descr, help=help_cli, epilog=example
+        )
+    except argparse.ArgumentError as exc:
+        if "conflicting subparser" in str(exc):
+            # conda-libmamba-solver's repoquery is already registered 
+            return
 
-    p = sub_parsers.add_parser(
-        "repoquery", description=descr, help=help_cli, epilog=example
-    )
     subsub_parser = p.add_subparsers(dest="subcmd")
     package_cmds = argparse.ArgumentParser(add_help=False)
     package_cmds.add_argument("package_query", help="the target package")
@@ -887,7 +892,7 @@ def _wrapped_main(*args, **kwargs):
     ):
         print(banner, file=sys.stderr)
 
-    init_loggers(context)
+    init_loggers()
 
     result = do_call(parsed_args, p)
     exit_code = getattr(
-- 
2.40.1

